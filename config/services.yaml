# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        
    _instanceof:
        App\Application\Configuration\Command\CommandHandlerInterface:
            tags: [ 'app.command_handler' ]

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Infrastructure/Migration/'
            - '../src/Kernel.php'
            - '../src/UserInterface/Request/'
    
    App\UserInterface\Controller\:
        resource: '../src/UserInterface/Controller/'
        tags: [ 'controller.service_arguments' ]
            
    app.domain_event_notifications_resolver:
        class: Neuron\BuildingBlocks\Infrastructure\DomainEventsDispatching\DomainEventNotificationsResolver
        arguments:
            - '%app.domain_event_notifications%'

    Neuron\BuildingBlocks\Infrastructure\DomainEventsDispatching\DomainEventNotificationsResolverInterface: '@app.domain_event_notifications_resolver'

    app.outbox: '@App\Infrastructure\Configuration\Outbox\Outbox'
    Neuron\BuildingBlocks\Infrastructure\Outbox\OutboxInterface: '@app.outbox'

    app.inbox: '@App\Infrastructure\Configuration\Inbox\Inbox'
    Neuron\BuildingBlocks\Infrastructure\Inbox\InboxInterface: '@app.inbox'

    app.domain_events_accessor: '@App\Infrastructure\Configuration\DomainEventsDispatching\DomainEventsAccessor'
    Neuron\BuildingBlocks\Infrastructure\DomainEventsDispatching\DomainEventsAccessorInterface: '@app.domain_events_accessor'

    app.domain_events_dispatcher: '@App\Infrastructure\Configuration\DomainEventsDispatching\DomainEventsDispatcher'
    Neuron\BuildingBlocks\Infrastructure\DomainEventsDispatching\DomainEventsDispatcherInterface: '@app.domain_events_dispatcher'

    app.unit_of_work: '@App\Infrastructure\Configuration\UnitOfWork'
    Neuron\BuildingBlocks\Infrastructure\UnitOfWorkInterface: '@app.unit_of_work'
                
    Neuron\BuildingBlocks\Infrastructure\Serializer\BaseId\BaseIdNormalizer:
        arguments:
            $normalizer: '@serializer.normalizer.object'
        tags:
            - { name: serializer.normalizer }

    Neuron\BuildingBlocks\Infrastructure\Serializer\DomainEvent\DomainEventNormalizer:
        arguments:
            $normalizer: '@serializer.normalizer.object'
        tags:
            - { name: serializer.normalizer }

    Neuron\BuildingBlocks\Integration\IntegrationEventNormalizer:
        arguments:
            $normalizer: '@serializer.normalizer.object'
        tags:
            - { name: serializer.normalizer }

imports:
    - { resource: ../src/Infrastructure/Configuration/DomainEventsDispatching/domain_event_notifications.yaml }
